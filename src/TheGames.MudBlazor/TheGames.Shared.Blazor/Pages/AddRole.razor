@page "/roles/add"
@inject AppService AppService
@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@attribute [Authorize]

<PageTitle>Add Role</PageTitle>

<EditForm Model="@roleModel" OnValidSubmit="@OnSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">Add Role</MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField @bind-Value="roleModel.Name" For="@(() => roleModel.Name)" Label="Name" />
            <MudCheckBox @bind-Checked="roleModel.IsDefault" Label="IsDefault" />
            <MudCheckBox @bind-Checked="roleModel.IsPublic" Label="IsPublic" />
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="OnCancel">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Add</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    MudDialogInstance? MudDialog { get; set; }

    private RoleItems roleModel = new();

    private void OnCancel()
    {
        MudDialog?.Cancel();
    }

    private async void OnSubmit()
    {
        try
        {
            roleModel.ExtraProperties = new Dictionary<string, object>();
            await AppService.AddRoleAsync(roleModel);
            MudDialog?.Close();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }
}
